---
- name: Fail if instances filter is invalid
  fail:
    msg: "Instances filter '{{ instances_filter }}' is not valid. Use [{{ ec2describe.filters | join(', ') }}]"
  when: instances_filter == False or ec2describe.filters[instances_filter] is not defined
  tags: always

- name: Get instance facts
  ec2_remote_facts:
    filters: "{{ ec2describe.filters[instances_filter] }}"
    region: "{{ ec2describe.region }}"
  register: instances_result
  tags: always

- debug: var=instances_result verbosity=1
  tags: vars

- name: Fail if instances not present
  fail:
    msg: "Number of instances in the filter group '{{ instances_filter }}' do not meet the required"
  when: ec2describe.results and instances_result.instances|length() != ec2describe.results
  tags: always

- name: Add instance to host group
  add_host:
    hostname: "{{ item.id }}.ec2describe"
    groupname: "{{ instances_filter }}.ec2describe"
    ansible_ssh_host: "{{ item.public_dns_name }}"
    ansible_user: "{{ ec2describe.ansible.user }}"
    ansible_ssh_private_key_file: "{{ ec2describe.ansible.ssh_key }}"
    ansible_ssh_port: "{{ ec2describe.ansible.port | default('22') }}"    
  with_items: "{{ instances_result.instances }}"
  tags: always
